<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.south.toast.base.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.south.toast.base.module.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="_User_id" property="id" jdbcType="VARCHAR" />
    <result column="_User_username" property="username" jdbcType="VARCHAR" />
    <result column="_User_name" property="name" jdbcType="VARCHAR" />
    <result column="_User_password" property="password" jdbcType="VARCHAR" />
    <result column="_User_mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="_User_status" property="status" jdbcType="INTEGER" />
    <result column="_User_role_name_str" property="roleNameStr" jdbcType="VARCHAR" />
    <result column="_User_is_first_login" property="isFirstLogin" jdbcType="INTEGER" />
    <result column="_User_type" property="type" jdbcType="INTEGER" />
    <result column="_User_is_locked" property="locked" jdbcType="BIT" />
    <result column="_User_delete_flag" property="deleteFlag" jdbcType="INTEGER" />
    <result column="_User_create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="_User_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="_User_update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="_User_update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and <trim prefixOverrides="_User.">${criterion.condition}</trim>
                </when>
                <when test="criterion.singleValue" >
                  and <trim prefixOverrides="_User.">${criterion.condition}</trim> #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and <trim prefixOverrides="_User.">${criterion.condition}</trim> #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and <trim prefixOverrides="_User.">${criterion.condition}</trim>
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    _User.id as _User_id, _User.username as _User_username, _User.name as _User_name, 
    _User.password as _User_password, _User.mobile as _User_mobile, _User.status as _User_status, 
    _User.role_name_str as _User_role_name_str, _User.is_first_login as _User_is_first_login, 
    _User.type as _User_type, _User.is_locked as _User_is_locked, _User.delete_flag as _User_delete_flag, 
    _User.create_by as _User_create_by, _User.create_time as _User_create_time, _User.update_by as _User_update_by, 
    _User.update_time as _User_update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.south.toast.base.module.UserExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from auth_user _User
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from auth_user _User
    where _User.id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from auth_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.south.toast.base.module.UserExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from auth_user
    <if test="_parameter != null" >
      <include refid="Delete_Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.south.toast.base.module.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE" >
      SELECT REPLACE(UUID(), '-', '')
    </selectKey>
    insert into auth_user (id, username, name, 
      password, mobile, status, 
      role_name_str, is_first_login, type, 
      is_locked, delete_flag, create_by, 
      create_time, update_by, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{roleNameStr,jdbcType=VARCHAR}, #{isFirstLogin,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{locked,jdbcType=BIT}, #{deleteFlag,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.south.toast.base.module.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.String" keyProperty="id" order="BEFORE" >
      SELECT REPLACE(UUID(), '-', '')
    </selectKey>
    insert into auth_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="username != null" >
        username,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="roleNameStr != null" >
        role_name_str,
      </if>
      <if test="isFirstLogin != null" >
        is_first_login,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="locked != null" >
        is_locked,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="roleNameStr != null" >
        #{roleNameStr,jdbcType=VARCHAR},
      </if>
      <if test="isFirstLogin != null" >
        #{isFirstLogin,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=BIT},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.south.toast.base.module.UserExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from auth_user _User
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update auth_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.roleNameStr != null" >
        role_name_str = #{record.roleNameStr,jdbcType=VARCHAR},
      </if>
      <if test="record.isFirstLogin != null" >
        is_first_login = #{record.isFirstLogin,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.locked != null" >
        is_locked = #{record.locked,jdbcType=BIT},
      </if>
      <if test="record.deleteFlag != null" >
        delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update auth_user 
    set id = #{record.id,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      role_name_str = #{record.roleNameStr,jdbcType=VARCHAR},
      is_first_login = #{record.isFirstLogin,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      is_locked = #{record.locked,jdbcType=BIT},
      delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.south.toast.base.module.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update auth_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="roleNameStr != null" >
        role_name_str = #{roleNameStr,jdbcType=VARCHAR},
      </if>
      <if test="isFirstLogin != null" >
        is_first_login = #{isFirstLogin,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="locked != null" >
        is_locked = #{locked,jdbcType=BIT},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.south.toast.base.module.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update auth_user
    set username = #{username,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      role_name_str = #{roleNameStr,jdbcType=VARCHAR},
      is_first_login = #{isFirstLogin,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      is_locked = #{locked,jdbcType=BIT},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <sql id="userExampleWhereClauser" >
    <trim suffixOverrides="AND">
            AND <trim prefix="(" suffix=")">                      <foreach collection="userExample.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                  <trim prefix="(" suffix=")" prefixOverrides="and" >
                    <foreach collection="criteria.criteria" item="criterion" >
                      <choose >
                        <when test="criterion.noValue" >
                        and ${criterion.condition}
                        </when>
                        <when test="criterion.singleValue" >
                        and ${criterion.condition} #{criterion.value}
                        </when>
                        <when test="criterion.betweenValue" >
                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                        </when>
                        <when test="criterion.listValue" >
                        and ${criterion.condition}
                          <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                            #{listItem}
                          </foreach>
                        </when>
                      </choose>
                    </foreach>
                  </trim>
                </if>
              </foreach>             </trim> </trim>
  </sql>
  <select id="query" resultMap="BaseResultMap" >
     select

    <include refid="Base_Column_List" />
    from auth_user _User
    <include refid="cn.south.toast.common.mybatis.dao.mapper.QueryGenerateMapper.QueryGenerate" />
  </select>
  <sql id="Delete_Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and <trim prefixOverrides="_User.">${criterion.condition}</trim>
                </when>
                <when test="criterion.singleValue" >
                  and <trim prefixOverrides="_User.">${criterion.condition}</trim> #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and <trim prefixOverrides="_User.">${criterion.condition}</trim> #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and <trim prefixOverrides="_User.">${criterion.condition}</trim>
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
</where>
  </sql>
</mapper>